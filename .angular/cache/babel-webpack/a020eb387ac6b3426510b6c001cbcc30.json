{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService {\n    constructor(http) {\n      this.http = http;\n      this._baseUrl = 'https://hugecarwash-api.herokuapp.com/api/orders';\n    } // async getOrders() : Promise<Observable<IOrder[]>> {\n    //   return this.http.get(`${this._baseUrl}`).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async getOrder(orderId: string) : Promise<Observable<IOrder>> {\n    //   return this.http.get(`${this._baseUrl}/${orderId}`).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async createOrder(order: IOrder) : Promise<Observable<IOrder>> {\n    //   return this.http.post(this._baseUrl, order).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async updateOrder(order: IOrder, id: string) : Promise<Observable<IOrder>> {\n    //   return this.http.put(`${this._baseUrl}/${id}`, order).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async deleteOrder(id: string) : Promise<Observable<boolean>> {\n    //   return this.http.delete(`${this._baseUrl}/${id}`).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n\n\n    getOrders() {\n      return this.http.get(this._baseUrl + \"/getAll\").toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    getAllOrders() {\n      return this.http.get(this._baseUrl + \"/getAllOrders\").toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    getOrder(orderId) {\n      return this.http.get(`${this._baseUrl}/get/${orderId}`).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    createOrder(order) {\n      return this.http.post(this._baseUrl + \"/create\", order).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    updateOrder(order, id) {\n      return this.http.put(`${this._baseUrl}/update/${id}`, order).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    deleteOrder(id) {\n      return this.http.delete(`${this._baseUrl}/delete/${id}`).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  }\n\n  OrderService.ɵfac = function OrderService_Factory(t) {\n    return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  OrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderService,\n    factory: OrderService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module"}