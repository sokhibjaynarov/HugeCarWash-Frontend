{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\jayna\\\\Desktop\\\\HugeCarWash\\\\HugeCarWash.Web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this._baseUrl = 'https://localhost:5001/api/employees';\n  }\n\n  getEmployees() {\n    return this.http.get(this._baseUrl).subscribe(data => {\n      return data;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getEmployee(employeeId) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.get(`${_this._baseUrl}/${employeeId}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  createEmployee(employee) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.post(_this2._baseUrl, employee).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  updateEmployee(employee, id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.http.put(`${_this3._baseUrl}/${id}`, employee).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  deleteEmployee(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.http.delete(`${_this4._baseUrl}/${id}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  getData() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5.http.get(_this5._baseUrl).pipe(map(data => {\n        console.log(data.data);\n        return data.data.map(item => item.firstName);\n      }));\n    })();\n  }\n\n}\n\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/jayna/Desktop/HugeCarWash/HugeCarWash.Web/src/app/services/employee/employee.service.ts"],"names":["map","i0","i1","EmployeeService","constructor","http","_baseUrl","getEmployees","get","subscribe","data","error","console","log","getEmployee","employeeId","pipe","createEmployee","employee","post","updateEmployee","id","put","deleteEmployee","delete","getData","item","firstName","ɵfac","EmployeeService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { map } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class EmployeeService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this._baseUrl = 'https://localhost:5001/api/employees';\r\n    }\r\n    getEmployees() {\r\n        return this.http.get(this._baseUrl).subscribe((data) => {\r\n            return data;\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    async getEmployee(employeeId) {\r\n        return this.http.get(`${this._baseUrl}/${employeeId}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async createEmployee(employee) {\r\n        return this.http.post(this._baseUrl, employee).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async updateEmployee(employee, id) {\r\n        return this.http.put(`${this._baseUrl}/${id}`, employee).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async deleteEmployee(id) {\r\n        return this.http.delete(`${this._baseUrl}/${id}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async getData() {\r\n        return this.http.get(this._baseUrl).pipe(map((data) => {\r\n            console.log(data.data);\r\n            return data.data.map((item) => item.firstName);\r\n        }));\r\n    }\r\n}\r\nEmployeeService.ɵfac = function EmployeeService_Factory(t) { return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient)); };\r\nEmployeeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: EmployeeService, factory: EmployeeService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}