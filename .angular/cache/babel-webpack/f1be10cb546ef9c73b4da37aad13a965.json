{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\jayna\\\\Desktop\\\\HugeCarWash\\\\HugeCarWash.Web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this._baseUrl = 'https://localhost:5001/api/orders';\n  }\n\n  getOrders() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.get(`${_this._baseUrl}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  getOrder(orderId) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.get(`${_this2._baseUrl}/${orderId}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  createOrder(order) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.http.post(_this3._baseUrl, order).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  updateOrder(order, id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.http.put(`${_this4._baseUrl}/${id}`, order).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  deleteOrder(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5.http.delete(`${_this5._baseUrl}/${id}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n}\n\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/jayna/Desktop/HugeCarWash/HugeCarWash.Web/src/app/services/order/order.service.ts"],"names":["map","i0","i1","OrderService","constructor","http","_baseUrl","getOrders","get","pipe","data","getOrder","orderId","createOrder","order","post","updateOrder","id","put","deleteOrder","delete","ɵfac","OrderService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,mCAAhB;AACH;;AACKC,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,aAAO,KAAI,CAACF,IAAL,CAAUG,GAAV,CAAe,GAAE,KAAI,CAACF,QAAS,EAA/B,EAAkCG,IAAlC,CAAuCT,GAAG,CAAEU,IAAD,IAAU;AACxD,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFgD,CAA1C,CAAP;AADc;AAIjB;;AACKC,EAAAA,QAAQ,CAACC,OAAD,EAAU;AAAA;;AAAA;AACpB,aAAO,MAAI,CAACP,IAAL,CAAUG,GAAV,CAAe,GAAE,MAAI,CAACF,QAAS,IAAGM,OAAQ,EAA1C,EAA6CH,IAA7C,CAAkDT,GAAG,CAAEU,IAAD,IAAU;AACnE,eAAOA,IAAI,CAACA,IAAZ;AACH,OAF2D,CAArD,CAAP;AADoB;AAIvB;;AACKG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AAAA;AACrB,aAAO,MAAI,CAACT,IAAL,CAAUU,IAAV,CAAe,MAAI,CAACT,QAApB,EAA8BQ,KAA9B,EAAqCL,IAArC,CAA0CT,GAAG,CAAEU,IAAD,IAAU;AAC3D,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFmD,CAA7C,CAAP;AADqB;AAIxB;;AACKM,EAAAA,WAAW,CAACF,KAAD,EAAQG,EAAR,EAAY;AAAA;;AAAA;AACzB,aAAO,MAAI,CAACZ,IAAL,CAAUa,GAAV,CAAe,GAAE,MAAI,CAACZ,QAAS,IAAGW,EAAG,EAArC,EAAwCH,KAAxC,EAA+CL,IAA/C,CAAoDT,GAAG,CAAEU,IAAD,IAAU;AACrE,eAAOA,IAAI,CAACA,IAAZ;AACH,OAF6D,CAAvD,CAAP;AADyB;AAI5B;;AACKS,EAAAA,WAAW,CAACF,EAAD,EAAK;AAAA;;AAAA;AAClB,aAAO,MAAI,CAACZ,IAAL,CAAUe,MAAV,CAAkB,GAAE,MAAI,CAACd,QAAS,IAAGW,EAAG,EAAxC,EAA2CR,IAA3C,CAAgDT,GAAG,CAAEU,IAAD,IAAU;AACjE,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFyD,CAAnD,CAAP;AADkB;AAIrB;;AA7BqB;;AA+B1BP,YAAY,CAACkB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,YAAV,EAAwBF,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,UAAf,CAAxB,CAAP;AAA6D,CAApH;;AACAtB,YAAY,CAACuB,KAAb,GAAqB,aAAczB,EAAE,CAAC0B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzB,YAAT;AAAuB0B,EAAAA,OAAO,EAAE1B,YAAY,CAACkB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { map } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class OrderService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this._baseUrl = 'https://localhost:5001/api/orders';\r\n    }\r\n    async getOrders() {\r\n        return this.http.get(`${this._baseUrl}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async getOrder(orderId) {\r\n        return this.http.get(`${this._baseUrl}/${orderId}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async createOrder(order) {\r\n        return this.http.post(this._baseUrl, order).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async updateOrder(order, id) {\r\n        return this.http.put(`${this._baseUrl}/${id}`, order).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async deleteOrder(id) {\r\n        return this.http.delete(`${this._baseUrl}/${id}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n}\r\nOrderService.ɵfac = function OrderService_Factory(t) { return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient)); };\r\nOrderService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: OrderService, factory: OrderService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}