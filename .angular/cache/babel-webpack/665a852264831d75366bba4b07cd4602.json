{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\jayna\\\\Desktop\\\\HugeCarWash\\\\HugeCarWash.Web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet AddOrderComponent = class AddOrderComponent {\n  constructor(service, router, employeeService, clientService) {\n    this.service = service;\n    this.router = router;\n    this.employeeService = employeeService;\n    this.clientService = clientService;\n    this.optionsClient = [\"Sam\", \"Varun\", \"Jasmine\"];\n    this.optionsEmployee = [\"Sam\", \"Varun\", \"Jasmine\"];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // (await this.clientService.getClients()).subscribe(data => {\n      //   this.clients = data;\n      // });\n      _this.clients = yield _this.clientService.getClients(); // (await this.employeeService.getEmployees()).subscribe(data => {\n      //   this.employees = data;\n      // });\n\n      _this.employees = yield _this.employeeService.getEmployees();\n\n      _this.getEmployeeNames();\n\n      _this.getClientCarNumbers();\n\n      _this.initForm();\n    })();\n  }\n\n  initForm() {\n    this.form = new FormGroup({\n      'carNumber': new FormControl('', Validators.required),\n      'employeeName': new FormControl('', Validators.required),\n      'price': new FormControl(60000, Validators.required)\n    });\n    this.form.get('employeeName').valueChanges.subscribe(response => {\n      this.filterDataEmployee(response);\n    });\n    this.form.get('carNumber').valueChanges.subscribe(response => {\n      this.filterDataClient(response);\n    });\n  }\n\n  filterDataClient(enteredData) {\n    this.filteredOptionsClient = this.optionsClient.filter(item => {\n      return item.toLowerCase().indexOf(enteredData.toLowerCase()) > -1;\n    });\n  }\n\n  filterDataEmployee(enteredData) {\n    this.filteredOptionsEmployee = this.optionsEmployee.filter(item => {\n      return item.toLowerCase().indexOf(enteredData.toLowerCase()) > -1;\n    });\n  }\n\n  getEmployeeNames() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      // (await this.employeeService.getData()).subscribe((response: string[]) => {\n      //   this.optionsEmployee = response;\n      //   this.filteredOptionsEmployee = response;\n      // });\n      _this2.optionsEmployee = yield _this2.employeeService.getData();\n      _this2.filteredOptionsEmployee = _this2.optionsEmployee;\n    })();\n  }\n\n  getClientCarNumbers() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      // (await this.clientService.getData()).subscribe((response: string[]) => {\n      //   this.optionsClient = response;\n      //   this.filteredOptionsClient = response;\n      // });\n      _this3.optionsClient = yield _this3.clientService.getData();\n      _this3.filteredOptionsClient = _this3.optionsClient;\n    })();\n  }\n\n  onSubmit() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      // this.order = new Order(\n      //   this.form.value.price,\n      //   this.clients.find(client => client.carNumber === this.form.value.carNumber)!.id,\n      //   this.employees.find(employee => employee.firstName === this.form.value.employeeName)!.id\n      // );\n      // console.log(this.order);\n      // (await this.service.createOrder(this.form.value)).subscribe((data: IOrder) => {\n      //   this.router.navigate([\"/orders\"]);\n      // }, (error: any) => {\n      //   console.log(error);\n      // });\n      yield _this4.service.createOrder(_this4.order);\n\n      _this4.router.navigate([\"/orders\"]);\n    })();\n  }\n\n};\nAddOrderComponent = __decorate([Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})], AddOrderComponent);\nexport { AddOrderComponent };","map":{"version":3,"sources":["C:/Users/jayna/Desktop/HugeCarWash/HugeCarWash.Web/src/app/components/orders/add-order/add-order.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","Validators","AddOrderComponent","constructor","service","router","employeeService","clientService","optionsClient","optionsEmployee","ngOnInit","clients","getClients","employees","getEmployees","getEmployeeNames","getClientCarNumbers","initForm","form","required","get","valueChanges","subscribe","response","filterDataEmployee","filterDataClient","enteredData","filteredOptionsClient","filter","item","toLowerCase","indexOf","filteredOptionsEmployee","getData","onSubmit","createOrder","order","navigate","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nlet AddOrderComponent = class AddOrderComponent {\r\n    constructor(service, router, employeeService, clientService) {\r\n        this.service = service;\r\n        this.router = router;\r\n        this.employeeService = employeeService;\r\n        this.clientService = clientService;\r\n        this.optionsClient = [\"Sam\", \"Varun\", \"Jasmine\"];\r\n        this.optionsEmployee = [\"Sam\", \"Varun\", \"Jasmine\"];\r\n    }\r\n    async ngOnInit() {\r\n        // (await this.clientService.getClients()).subscribe(data => {\r\n        //   this.clients = data;\r\n        // });\r\n        this.clients = await this.clientService.getClients();\r\n        // (await this.employeeService.getEmployees()).subscribe(data => {\r\n        //   this.employees = data;\r\n        // });\r\n        this.employees = await this.employeeService.getEmployees();\r\n        this.getEmployeeNames();\r\n        this.getClientCarNumbers();\r\n        this.initForm();\r\n    }\r\n    initForm() {\r\n        this.form = new FormGroup({\r\n            'carNumber': new FormControl('', Validators.required),\r\n            'employeeName': new FormControl('', Validators.required),\r\n            'price': new FormControl(60000, Validators.required),\r\n        });\r\n        this.form.get('employeeName').valueChanges.subscribe(response => {\r\n            this.filterDataEmployee(response);\r\n        });\r\n        this.form.get('carNumber').valueChanges.subscribe(response => {\r\n            this.filterDataClient(response);\r\n        });\r\n    }\r\n    filterDataClient(enteredData) {\r\n        this.filteredOptionsClient = this.optionsClient.filter(item => {\r\n            return item.toLowerCase().indexOf(enteredData.toLowerCase()) > -1;\r\n        });\r\n    }\r\n    filterDataEmployee(enteredData) {\r\n        this.filteredOptionsEmployee = this.optionsEmployee.filter(item => {\r\n            return item.toLowerCase().indexOf(enteredData.toLowerCase()) > -1;\r\n        });\r\n    }\r\n    async getEmployeeNames() {\r\n        // (await this.employeeService.getData()).subscribe((response: string[]) => {\r\n        //   this.optionsEmployee = response;\r\n        //   this.filteredOptionsEmployee = response;\r\n        // });\r\n        this.optionsEmployee = await this.employeeService.getData();\r\n        this.filteredOptionsEmployee = this.optionsEmployee;\r\n    }\r\n    async getClientCarNumbers() {\r\n        // (await this.clientService.getData()).subscribe((response: string[]) => {\r\n        //   this.optionsClient = response;\r\n        //   this.filteredOptionsClient = response;\r\n        // });\r\n        this.optionsClient = await this.clientService.getData();\r\n        this.filteredOptionsClient = this.optionsClient;\r\n    }\r\n    async onSubmit() {\r\n        // this.order = new Order(\r\n        //   this.form.value.price,\r\n        //   this.clients.find(client => client.carNumber === this.form.value.carNumber)!.id,\r\n        //   this.employees.find(employee => employee.firstName === this.form.value.employeeName)!.id\r\n        // );\r\n        // console.log(this.order);\r\n        // (await this.service.createOrder(this.form.value)).subscribe((data: IOrder) => {\r\n        //   this.router.navigate([\"/orders\"]);\r\n        // }, (error: any) => {\r\n        //   console.log(error);\r\n        // });\r\n        await this.service.createOrder(this.order);\r\n        this.router.navigate([\"/orders\"]);\r\n    }\r\n};\r\nAddOrderComponent = __decorate([\r\n    Component({\r\n        selector: 'app-add-order',\r\n        templateUrl: './add-order.component.html',\r\n        styleUrls: ['./add-order.component.css']\r\n    })\r\n], AddOrderComponent);\r\nexport { AddOrderComponent };\r\n"]},"metadata":{},"sourceType":"module"}