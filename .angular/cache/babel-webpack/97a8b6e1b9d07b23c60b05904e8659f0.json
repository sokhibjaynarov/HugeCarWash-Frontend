{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\jayna\\\\Desktop\\\\HugeCarWash\\\\HugeCarWash.Web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this._baseUrl = 'https://localhost:5001/api/employees';\n  }\n\n  getEmployees() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.get(`${_this._baseUrl}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n}\n\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n}); // async getEmployee(employeeId: string) : Promise<Observable<IEmployee>> {\n//   return this.http.get(`${this._baseUrl}/${employeeId}`).pipe(map((data: any) => {\n//     return data.data;\n//   }));\n// }\n\ngetEmployee(employeeId, string);\nPromise < IEmployee > {\n  createEmployee(employee) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.post(_this2._baseUrl, employee).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  },\n\n  updateEmployee(employee, id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.http.put(`${_this3._baseUrl}/${id}`, employee).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  },\n\n  deleteEmployee(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.http.delete(`${_this4._baseUrl}/${id}`).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  },\n\n  getData() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5.http.get(_this5._baseUrl).pipe(map(data => {\n        console.log(data.data);\n        return data.data.map(item => item.firstName);\n      }));\n    })();\n  }\n\n};","map":{"version":3,"sources":["C:/Users/jayna/Desktop/HugeCarWash/HugeCarWash.Web/src/app/services/employee/employee.service.ts"],"names":["map","i0","i1","EmployeeService","constructor","http","_baseUrl","getEmployees","get","pipe","data","ɵfac","EmployeeService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","getEmployee","employeeId","string","Promise","IEmployee","createEmployee","employee","post","updateEmployee","id","put","deleteEmployee","delete","getData","console","log","item","firstName"],"mappings":";AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,sCAAhB;AACH;;AACKC,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,aAAO,KAAI,CAACF,IAAL,CAAUG,GAAV,CAAe,GAAE,KAAI,CAACF,QAAS,EAA/B,EAAkCG,IAAlC,CAAuCT,GAAG,CAAEU,IAAD,IAAU;AACxD,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFgD,CAA1C,CAAP;AADiB;AAIpB;;AATwB;;AAW7BP,eAAe,CAACQ,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIV,eAAV,EAA2BF,EAAE,CAACa,QAAH,CAAYZ,EAAE,CAACa,UAAf,CAA3B,CAAP;AAAgE,CAA7H;;AACAZ,eAAe,CAACa,KAAhB,GAAwB,aAAcf,EAAE,CAACgB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEf,eAAT;AAA0BgB,EAAAA,OAAO,EAAEhB,eAAe,CAACQ,IAAnD;AAAyDS,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC,C,CACA;AACA;AACA;AACA;AACA;;AACAC,WAAW,CAACC,UAAD,EAAaC,MAAb,CAAX;AACAC,OAAO,GAAGC,SAAV,GAAsB;AACZC,EAAAA,cAAN,CAAqBC,QAArB,EAA+B;AAAA;;AAAA;AAC3B,aAAO,MAAI,CAACtB,IAAL,CAAUuB,IAAV,CAAe,MAAI,CAACtB,QAApB,EAA8BqB,QAA9B,EAAwClB,IAAxC,CAA6CT,GAAG,CAAEU,IAAD,IAAU;AAC9D,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFsD,CAAhD,CAAP;AAD2B;AAI9B,GALiB;;AAMZmB,EAAAA,cAAN,CAAqBF,QAArB,EAA+BG,EAA/B,EAAmC;AAAA;;AAAA;AAC/B,aAAO,MAAI,CAACzB,IAAL,CAAU0B,GAAV,CAAe,GAAE,MAAI,CAACzB,QAAS,IAAGwB,EAAG,EAArC,EAAwCH,QAAxC,EAAkDlB,IAAlD,CAAuDT,GAAG,CAAEU,IAAD,IAAU;AACxE,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFgE,CAA1D,CAAP;AAD+B;AAIlC,GAViB;;AAWZsB,EAAAA,cAAN,CAAqBF,EAArB,EAAyB;AAAA;;AAAA;AACrB,aAAO,MAAI,CAACzB,IAAL,CAAU4B,MAAV,CAAkB,GAAE,MAAI,CAAC3B,QAAS,IAAGwB,EAAG,EAAxC,EAA2CrB,IAA3C,CAAgDT,GAAG,CAAEU,IAAD,IAAU;AACjE,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFyD,CAAnD,CAAP;AADqB;AAIxB,GAfiB;;AAgBZwB,EAAAA,OAAN,GAAgB;AAAA;;AAAA;AACZ,aAAO,MAAI,CAAC7B,IAAL,CAAUG,GAAV,CAAc,MAAI,CAACF,QAAnB,EAA6BG,IAA7B,CAAkCT,GAAG,CAAEU,IAAD,IAAU;AACnDyB,QAAAA,OAAO,CAACC,GAAR,CAAY1B,IAAI,CAACA,IAAjB;AACA,eAAOA,IAAI,CAACA,IAAL,CAAUV,GAAV,CAAeqC,IAAD,IAAUA,IAAI,CAACC,SAA7B,CAAP;AACH,OAH2C,CAArC,CAAP;AADY;AAKf;;AArBiB,CAAtB","sourcesContent":["import { map } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class EmployeeService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this._baseUrl = 'https://localhost:5001/api/employees';\r\n    }\r\n    async getEmployees() {\r\n        return this.http.get(`${this._baseUrl}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n}\r\nEmployeeService.ɵfac = function EmployeeService_Factory(t) { return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient)); };\r\nEmployeeService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: EmployeeService, factory: EmployeeService.ɵfac, providedIn: 'root' });\r\n// async getEmployee(employeeId: string) : Promise<Observable<IEmployee>> {\r\n//   return this.http.get(`${this._baseUrl}/${employeeId}`).pipe(map((data: any) => {\r\n//     return data.data;\r\n//   }));\r\n// }\r\ngetEmployee(employeeId, string);\r\nPromise < IEmployee > {\r\n    async createEmployee(employee) {\r\n        return this.http.post(this._baseUrl, employee).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    },\r\n    async updateEmployee(employee, id) {\r\n        return this.http.put(`${this._baseUrl}/${id}`, employee).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    },\r\n    async deleteEmployee(id) {\r\n        return this.http.delete(`${this._baseUrl}/${id}`).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    },\r\n    async getData() {\r\n        return this.http.get(this._baseUrl).pipe(map((data) => {\r\n            console.log(data.data);\r\n            return data.data.map((item) => item.firstName);\r\n        }));\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}