{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\jayna\\\\Desktop\\\\HugeCarWash\\\\HugeCarWash.Web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientService {\n  constructor(http) {\n    this.http = http;\n    this._baseUrl = \"https://localhost:5001/api/Users\";\n  }\n\n  getClients() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.http.get(_this._baseUrl).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  getClient(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.get(_this2._baseUrl + \"/\" + id).pipe(map(data => {\n        return data.data;\n      }));\n    })();\n  }\n\n  createClient(client) {\n    return this.http.post(this._baseUrl, client).pipe(map(data => {\n      return data.data;\n    }));\n  }\n\n  updateClient(client, id) {\n    return this.http.put(this._baseUrl + \"/\" + id, client).pipe(map(data => {\n      console.log(id);\n      return data.data;\n    }));\n  }\n\n  deleteClient(id) {\n    return this.http.delete(this._baseUrl + \"/\" + id).pipe(map(data => {\n      return data.data;\n    }));\n  }\n\n  getData() {\n    return this.http.get(this._baseUrl).pipe(map(data => {\n      return data.data.map(item => item.carNumber);\n    }));\n  }\n\n}\n\nClientService.ɵfac = function ClientService_Factory(t) {\n  return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientService,\n  factory: ClientService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/jayna/Desktop/HugeCarWash/HugeCarWash.Web/src/app/services/client/client.service.ts"],"names":["map","i0","i1","ClientService","constructor","http","_baseUrl","getClients","get","pipe","data","getClient","id","createClient","client","post","updateClient","put","console","log","deleteClient","delete","getData","item","carNumber","ɵfac","ClientService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,kCAAhB;AACH;;AACKC,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,aAAO,KAAI,CAACF,IAAL,CAAUG,GAAV,CAAc,KAAI,CAACF,QAAnB,EAA6BG,IAA7B,CAAkCT,GAAG,CAAEU,IAAD,IAAU;AACnD,eAAOA,IAAI,CAACA,IAAZ;AACH,OAF2C,CAArC,CAAP;AADe;AAIlB;;AACKC,EAAAA,SAAS,CAACC,EAAD,EAAK;AAAA;;AAAA;AAChB,aAAO,MAAI,CAACP,IAAL,CAAUG,GAAV,CAAc,MAAI,CAACF,QAAL,GAAgB,GAAhB,GAAsBM,EAApC,EAAwCH,IAAxC,CAA6CT,GAAG,CAAEU,IAAD,IAAU;AAC9D,eAAOA,IAAI,CAACA,IAAZ;AACH,OAFsD,CAAhD,CAAP;AADgB;AAInB;;AACDG,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAO,KAAKT,IAAL,CAAUU,IAAV,CAAe,KAAKT,QAApB,EAA8BQ,MAA9B,EAAsCL,IAAtC,CAA2CT,GAAG,CAAEU,IAAD,IAAU;AAC5D,aAAOA,IAAI,CAACA,IAAZ;AACH,KAFoD,CAA9C,CAAP;AAGH;;AACDM,EAAAA,YAAY,CAACF,MAAD,EAASF,EAAT,EAAa;AACrB,WAAO,KAAKP,IAAL,CAAUY,GAAV,CAAc,KAAKX,QAAL,GAAgB,GAAhB,GAAsBM,EAApC,EAAwCE,MAAxC,EAAgDL,IAAhD,CAAqDT,GAAG,CAAEU,IAAD,IAAU;AACtEQ,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACA,aAAOF,IAAI,CAACA,IAAZ;AACH,KAH8D,CAAxD,CAAP;AAIH;;AACDU,EAAAA,YAAY,CAACR,EAAD,EAAK;AACb,WAAO,KAAKP,IAAL,CAAUgB,MAAV,CAAiB,KAAKf,QAAL,GAAgB,GAAhB,GAAsBM,EAAvC,EAA2CH,IAA3C,CAAgDT,GAAG,CAAEU,IAAD,IAAU;AACjE,aAAOA,IAAI,CAACA,IAAZ;AACH,KAFyD,CAAnD,CAAP;AAGH;;AACDY,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKjB,IAAL,CAAUG,GAAV,CAAc,KAAKF,QAAnB,EAA6BG,IAA7B,CAAkCT,GAAG,CAAEU,IAAD,IAAU;AACnD,aAAOA,IAAI,CAACA,IAAL,CAAUV,GAAV,CAAeuB,IAAD,IAAUA,IAAI,CAACC,SAA7B,CAAP;AACH,KAF2C,CAArC,CAAP;AAGH;;AAnCsB;;AAqC3BrB,aAAa,CAACsB,IAAd,GAAqB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkC;AAAE,SAAO,KAAKA,CAAC,IAAIxB,aAAV,EAAyBF,EAAE,CAAC2B,QAAH,CAAY1B,EAAE,CAAC2B,UAAf,CAAzB,CAAP;AAA8D,CAAvH;;AACA1B,aAAa,CAAC2B,KAAd,GAAsB,aAAc7B,EAAE,CAAC8B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE7B,aAAT;AAAwB8B,EAAAA,OAAO,EAAE9B,aAAa,CAACsB,IAA/C;AAAqDS,EAAAA,UAAU,EAAE;AAAjE,CAAtB,CAApC","sourcesContent":["import { map } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ClientService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this._baseUrl = \"https://localhost:5001/api/Users\";\r\n    }\r\n    async getClients() {\r\n        return this.http.get(this._baseUrl).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    async getClient(id) {\r\n        return this.http.get(this._baseUrl + \"/\" + id).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    createClient(client) {\r\n        return this.http.post(this._baseUrl, client).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    updateClient(client, id) {\r\n        return this.http.put(this._baseUrl + \"/\" + id, client).pipe(map((data) => {\r\n            console.log(id);\r\n            return data.data;\r\n        }));\r\n    }\r\n    deleteClient(id) {\r\n        return this.http.delete(this._baseUrl + \"/\" + id).pipe(map((data) => {\r\n            return data.data;\r\n        }));\r\n    }\r\n    getData() {\r\n        return this.http.get(this._baseUrl).pipe(map((data) => {\r\n            return data.data.map((item) => item.carNumber);\r\n        }));\r\n    }\r\n}\r\nClientService.ɵfac = function ClientService_Factory(t) { return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient)); };\r\nClientService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ClientService, factory: ClientService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}