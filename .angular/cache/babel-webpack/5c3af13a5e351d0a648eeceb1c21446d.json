{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ClientService = /*#__PURE__*/(() => {\n  class ClientService {\n    constructor(http) {\n      this.http = http;\n      this._baseUrl = \"https://hugecarwash-api.herokuapp.com/api/Users\";\n    } // async getClients() : Promise<Observable<IClient[]>> {\n    //   return this.http.get<IClient[]>(this._baseUrl).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async getClient(id: string) : Promise<Observable<IClient>> {\n    //   return this.http.get(this._baseUrl + \"/\" + id).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async createClient(client: IClient) : Promise<Observable<IClient>> {\n    //   return this.http.post(this._baseUrl, client).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async updateClient(client: IClient, id: string) : Promise<Observable<IClient>> {\n    //   return this.http.put(this._baseUrl + \"/\" + id, client).pipe(map((data: any) => {\n    //     console.log(id);\n    //     return data.data;\n    //   }));\n    // }\n    // async deleteClient(id: string) : Promise<Observable<boolean>> {\n    //   return this.http.delete(this._baseUrl + \"/\" + id).pipe(map((data: any) => {\n    //     return data.data;\n    //   }));\n    // }\n    // async getData() : Promise<Observable<string[]>> {\n    //   return this.http.get(this._baseUrl).pipe(map((data: any) => {\n    //     return data.data.map((item: any) => item.carNumber);\n    //   }));\n    // }\n\n\n    getClients() {\n      return this.http.get(this._baseUrl).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    getClient(id) {\n      return this.http.get(this._baseUrl + \"/\" + id).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    createClient(client) {\n      return this.http.post(this._baseUrl, client).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    updateClient(client, id) {\n      return this.http.put(this._baseUrl + \"/\" + id, client).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    deleteClient(id) {\n      return this.http.delete(this._baseUrl + \"/\" + id).toPromise().then(data => {\n        return data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    getData() {\n      return this.http.get(this._baseUrl).toPromise().then(data => {\n        return data.data.map(item => item.carNumber);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  }\n\n  ClientService.ɵfac = function ClientService_Factory(t) {\n    return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientService,\n    factory: ClientService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClientService;\n})();","map":null,"metadata":{},"sourceType":"module"}